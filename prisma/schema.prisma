// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(user)
  orders    Order[]
  cartItems CartItem[]
  reviews   Review[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  merchants Merchant[]
}

enum Role {
  user
  merchant
}

model Category {
  id       String    @id @default(uuid())
  name     String
  products Product[]
}

model Merchant {
  id          String  @id @default(uuid())
  userId      String
  name        String  @db.VarChar(255)
  description String? @db.Text

  user     User      @relation(fields: [userId], references: [id])
  products Product[]
}

model Product {
  id          String      @id @default(uuid())
  merchantId  String
  name        String
  description String      @db.Text
  price       Decimal     @db.Decimal(10, 2)
  stock       Int
  categoryId  String
  imageUrl    String
  reviews     Review[]
  cartItems   CartItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItem   OrderItem[]
  category    Category    @relation(fields: [categoryId], references: [id])
  merchant    Merchant    @relation(fields: [merchantId], references: [id])
}

model Order {
  id          String      @id @default(uuid())
  userId      String
  totalAmount Decimal     @db.Decimal(10, 2)
  status      String // "pending", "paid", "shipped"
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  order     Order   @relation(fields: [orderId], references: [id])
}

model CartItem {
  id        String  @id @default(uuid())
  userId    String
  productId String
  quantity  Int
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id        String   @id @default(uuid())
  userId    String
  productId String
  rating    Int // 1-5 stars
  review    String   @db.Text
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}
